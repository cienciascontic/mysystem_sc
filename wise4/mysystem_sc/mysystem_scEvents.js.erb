/*globals View componentloader eventManager */

/*
 * This handles events and calls the appropriate function to handle
 * the event.
 */
View.prototype.mysystem_scDispatcher = function(type,args,obj){
  if(type === 'mysystemPromptChanged'){
    console.log('mysystemPromptChanged');
    //  obj.Mysystem_scNode.AddNewModule();
  }
  if(type === 'mysystemSCFieldUpdated'){
    console.log('mysystemSCFieldUpdated');
    obj.Mysystem_scNode.fieldUpdated(args[0], args[1]);
  }
  if(type === 'mysystemSCRemoveMod'){
    console.log('mysystemSCRemoveMod');
    obj.Mysystem_scNode.removeMod(args[0]);
  }
  if(type === 'mysystemSCAddNewModule'){
    console.log('mysystemSCAddNewModule');
    obj.Mysystem_scNode.AddNewModule();
  }
  if(type === 'mysystemSCAddNewEnergyType'){
    console.log('mysystemSCAddNewEnergyType');
    obj.Mysystem_scNode.AddNewEnergyType();
  }
  if(type === 'mysystemSCEnergyFieldUpdated'){
    console.log('mysystemSCEnergyFieldUpdated');
    obj.Mysystem_scNode.fieldEnergyUpdated(args[0], args[1]);
  }
  if(type === 'mysystemSCRemoveEtype'){
    console.log('mysystemSCRemoveEtype');
    obj.Mysystem_scNode.removeEtype(args[0]);
  }
};

/*
 * this is a list of events that can be fired. when the event is fired,
 * the dispatcher function above will be called and then call the
 * appropriate function to handle the event.
 */
var events = [
  /*
   * TODO: rename templateUpdatePrompt
   * wait until you implement the authoring before you rename this
   */
  'mysystemSCFieldUpdated', //",["name","' + a + '"])'});
  'mysystemSCEnergyFieldUpdated',
  'mysystemSCRemoveMod',     //"' + a + '")'});
  'mysystemSCRemoveEtype',
  'mysystemSCAddNewModule',
  'mysystemSCAddNewEnergyType',
  'templateUpdatePrompt'
];

/*
 * add all the events to the vle so the vle will listen for these events
 * and call the dispatcher function when the event is fired
 */
for (var x=0; x<events.length; x++) {
  componentloader.addEvent(events[x], 'mysystem_scDispatcher');
}

// used to notify scriptloader that this script has finished loading
if (typeof eventManager != 'undefined') {
  eventManager.fire('scriptLoaded', 'vle/node/mysystem_sc/mysystem_scEvents.js');
}


