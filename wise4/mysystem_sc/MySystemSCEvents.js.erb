
/**
 * The MySystemSCDispatcher catches events specific to authoring individual
 * my system steps and delegates them to the appropriate functions for
 * this view.
 */
View.prototype.MySystemSCDispatcher = function(type,args,obj){
	if(type=='MySystemSCPromptChanged'){
		obj.MySystemNode.updatePrompt();
	} else if(type=='MySystemSCFieldUpdated'){
		obj.MySystemNode.fieldUpdated(args[0], args[1]);
	} else if(type=='MySystemSCRemoveMod'){
		obj.MySystemNode.removeMod(args[0]);
	} else if(type=='MySystemSCAddNew'){
		obj.MySystemNode.addNew();
	};
};

//this list of events
var events = [
	'MySystemSCPromptChanged',
	'MySystemSCFieldUpdated',
	'MySystemSCRemoveMod',
	'MySystemSCAddNew'
];

/*
 * add all the events to the vle so the vle will listen for these events
 * and call the dispatcher function when the event is fired
 */
for(var x=0; x<events.length; x++) {
	componentloader.addEvent(events[x], 'MySystemSCDispatcher');
}

//used to notify scriptloader that this script has finished loading
if(typeof eventManager != 'undefined'){
	eventManager.fire('scriptLoaded', 'vle/node/mysystem_sc/MySystemSCEvents.js');
};


